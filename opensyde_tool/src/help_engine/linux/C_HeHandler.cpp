//----------------------------------------------------------------------------------------------------------------------
/*!
   \file
   \brief       Help engine handler (implementation)

   Help engine handler

   \copyright   Copyright 2016 Sensor-Technik Wiedemann GmbH. All rights reserved.
*/
//----------------------------------------------------------------------------------------------------------------------

/* -- Includes ------------------------------------------------------------------------------------------------------ */
#include "precomp_headers.h"

//Html help
#include <QProcess>
#include <QKeyEvent>
#include <iostream>
#include "C_HeHandler.h"
#include "TGLUtils.h"
#include "C_Uti.h"

/* -- Used Namespaces ----------------------------------------------------------------------------------------------- */
using namespace stw_types;
using namespace stw_tgl;
using namespace stw_opensyde_gui_logic;

/* -- Module Global Constants --------------------------------------------------------------------------------------- */

/* -- Types --------------------------------------------------------------------------------------------------------- */

/* -- Global Variables ---------------------------------------------------------------------------------------------- */

/* -- Module Global Variables --------------------------------------------------------------------------------------- */
C_HeHandler C_HeHandler::mhc_Instance;

/* -- Module Global Function Prototypes ----------------------------------------------------------------------------- */

/* -- Implementation ------------------------------------------------------------------------------------------------ */

//----------------------------------------------------------------------------------------------------------------------
/*! \brief   Get current help engine instance

   \return
   Current help engine instance
*/
//----------------------------------------------------------------------------------------------------------------------
C_HeHandler & C_HeHandler::GetInstance(void)
{
   return mhc_Instance;
}

//----------------------------------------------------------------------------------------------------------------------
/*! \brief   Call help for current widget

   \param[in] opc_Widget Current widget
*/
//----------------------------------------------------------------------------------------------------------------------
void C_HeHandler::CallSpecificHelpPage(const QString & orc_ClassName)
{
   (void)orc_ClassName;
}

//----------------------------------------------------------------------------------------------------------------------
/*! \brief   Check help key press

   \param[in] opc_KeyEvent Key event information

   \return
   true: Help key press detected
   false: No help key press detected
*/
//----------------------------------------------------------------------------------------------------------------------
bool C_HeHandler::CheckHelpKey(const QKeyEvent * const opc_KeyEvent)
{
   (void)opc_KeyEvent;
   
   return false;
}

//----------------------------------------------------------------------------------------------------------------------
/*! \brief   Check help key press

   \param[in] orc_RelPath    Relative path to help file
*/
//----------------------------------------------------------------------------------------------------------------------
void C_HeHandler::SetHelpFileRelPath(const QString & orc_RelPath)
{
   (void)orc_RelPath;
}

//----------------------------------------------------------------------------------------------------------------------
/*! \brief   Default constructor
*/
//----------------------------------------------------------------------------------------------------------------------
C_HeHandler::C_HeHandler()
{
}

//----------------------------------------------------------------------------------------------------------------------
/*! \brief   Default destructor
*/
//----------------------------------------------------------------------------------------------------------------------
C_HeHandler::~C_HeHandler()
{
}
